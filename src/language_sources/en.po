# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2009-05-05 12:45+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../wapiti.py:192
msgid "No links or forms found in this page !"
msgstr "No links or forms found in this page !"

#: ../wapiti.py:193
msgid "Make sure the url is correct."
msgstr "Make sure the url is correct."

#: ../wapiti.py:199
msgid "Attacking urls (GET)"
msgstr "Attacking urls (GET)"

#: ../wapiti.py:205
msgid "Attacking forms (POST)"
msgstr "Attacking forms (POST)"

#: ../wapiti.py:211
msgid "Looking for permanent XSS"
msgstr "Looking for permanent XSS"

#: ../wapiti.py:216
msgid "Upload scripts found"
msgstr "Upload scripts found"

#: ../wapiti.py:226
msgid "Report"
msgstr "Report"

#: ../wapiti.py:228
msgid "A report has been generated in the file"
msgstr "A report has been generated in the file"

#: ../wapiti.py:230
msgid "Open"
msgstr "Open"

#: ../wapiti.py:231
msgid "with a browser to see this report."
msgstr "with a browser to see this report"

#: ../wapiti.py:331
msgid "attackGET"
msgstr "attackGET"

#: ../wapiti.py:354
msgid "attackPOST"
msgstr "attackPOST"

#: ../wapiti.py:371
msgid "wapityDoc"
msgstr ""
"Wapiti-SVN - A web application vulnerability scanner \n"
" \n"
" Usage: python wapiti.py http://server.com/base/url/ [options] \n"
" \n"
" Supported options are: \n"
" -s <url> \n"
" --start <url> \n"
" \tTo specify an url to start with \n"
"  \n"
" -x <url> \n"
" --exclude <url> \n"
" \tTo exclude an url from the scan (for example logout scripts) \n"
" \tYou can also use a wildcard (*) \n"
" \tExample : -x http://server/base/?page=*&module=test \n"
" \tor -x http://server/base/admin/* to exclude a directory \n"
" \n"
" -p <url_proxy> \n"
" --proxy <url_proxy> \n"
" \tTo specify a proxy \n"
" \tExample: -p http://proxy:port/ \n"
" \n"
" -c <cookie_file> \n"
" --cookie <cookie_file> \n"
" \tTo use a cookie \n"
" \n"
" -t <timeout> \n"
" --timeout <timeout> \n"
" \tTo fix the timeout (in seconds) \n"
" \n"
" -a <login%password> \n"
" --auth <login%password> \n"
" \tSet credentials for HTTP authentication \n"
" \tDoesn't work with Python 2.4 \n"
" \n"
" -r <parameter_name> \n"
" --remove <parameter_name> \n"
" \tRemove a parameter from URLs \n"
" \n"
" -n <limit> \n"
" --nice <limit> \n"
" \tDefine a limit of urls to read with the same pattern \n"
" \tUse this option to prevent endless loops \n"
" \tMust be greater than 0 \n"
" \n"
" -m <module> \n"
" --module <module> \n"
" \tUse a predefined set of scan/attack options \n"
" \tGET_ALL: only use GET request (no POST) \n"
" \tGET_XSS: only XSS attacks with HTTP GET method \n"
" \tPOST_XSS: only XSS attacks with HTTP POST method \n"
" \n"
" -u \n"
" --underline \n"
" \tUse color to highlight vulnerables parameters in output \n"
" \n"
" -v <level> \n"
" --verbose <level> \n"
" \tSet the verbosity level \n"
" \t0: quiet (default), 1: print each url, 2: print every attack \n"
" \n"
" -f <type_file> \n"
" --reportType <type_file> \n"
" \tSet the type of the report \n"
" \txml: Report in XML format \n"
" \thtml: Report in HTML format \n"
" \n"
" -o <output> \n"
" --output <output_file> \n"
" \tSet the name of the report file \n"
" \tIf the selected report type is 'html', this parameter must be a "
"directory \n"
" \n"
" -h \n"
" --help \n"
" \tTo print this usage message"

#: ../wapiti.py:452
msgid "Wapiti-SVN (wapiti.sourceforge.net)"
msgstr "Wapiti-SVN (wapiti.sourceforge.net)"

#: ../net/lswww.py:138 ../net/lswww.py:161
msgid "Invalid link argument"
msgstr "Invalid link argument"

#: ../net/lswww.py:471
msgid "URLs"
msgstr "URLs"

#: ../net/lswww.py:478
msgid "Forms Info"
msgstr "Forms Info"

#: ../net/lswww.py:480
msgid "From"
msgstr "From"

#: ../net/lswww.py:481
msgid "To"
msgstr "To"

#: ../net/lswww.py:489
msgid "Upload Scripts"
msgstr "Upload Scripts"

#: ../net/lswww.py:676
msgid "Forms"
msgstr "Forms"

#: ../net/lswww.py:679
msgid "Form"
msgstr "Form"

#: ../net/lswww.py:683
msgid "Method"
msgstr "Method"

#: ../net/lswww.py:684
msgid "Intputs"
msgstr "Inputs"

#: ../net/lswww.py:689
msgid "Selects"
msgstr "Selects"

#: ../net/lswww.py:694
msgid "TextAreas"
msgstr "TextAreas"

#: ../net/lswww.py:699
msgid "URLS"
msgstr "URLS"

#: ../net/lswww.py:783
msgid "lswwwDoc"
msgstr ""
" lswww explore a website and extract links and forms fields.\n"
" \n"
"  Usage: python lswww.py http://server.com/base/url/ [options]\n"
" \n"
"  Supported options are:\n"
" -s <url>\n"
" --start <url>\n"
" \tTo specify an url to start with\n"
" \n"
" -x <url>\n"
" --exclude <url>\n"
" \tTo exclude an url from the scan (for example logout scripts)\n"
" \tYou can also use a wildcard (*)\n"
" \tExample : -x http://server/base/?page=*&module=test\n"
" \tor -x http://server/base/admin/* to exclude a directory\n"
" \n"
" -p <url_proxy>\n"
" --proxy <url_proxy>\n"
" \tTo specify a proxy\n"
" \tExemple: -p http://proxy:port/\n"
" \n"
" -c <cookie_file>\n"
" --cookie <cookie_file>\n"
" \tTo use a cookie\n"
" \n"
" -a <login%password>\n"
" --auth <login%password>\n"
" \tSet credentials for HTTP authentication\n"
" \tDoesn't work with Python 2.4\n"
" \n"
" -r <parameter_name>\n"
" --remove <parameter_name>\n"
" \tRemove a parameter from URLs\n"
" \n"
" -v <level>\n"
" --verbose <level>\n"
" \tSet verbosity level\n"
" \t  0: only print results\n"
" \t  1: print a dot for each url found (default)\n"
" \t  2: print each url\n"
" \n"
" -t <timeout>\n"
" --timeout <timeout>\n"
" \tSet the timeout (in seconds)\n"
" \n"
" -n <limit>\n"
" --nice <limit>\n"
" \tDefine a limit of urls to read with the same pattern\n"
" \tUse this option to prevent endless loops\n"
" \tMust be greater than 0\n"
" \n"
" -h\n"
" --help\n"
" \tTo print this usage message"

#: ../attack/crlfattack.py:48 ../attack/crlfattack.py:53
#: ../attack/execattack.py:80 ../attack/execattack.py:86
#: ../attack/sqlinjectionattack.py:98
msgid "(QUERY_STRING)"
msgstr "(QUERY_STRING)"

#: ../attack/crlfattack.py:49
msgid "CRLF Injection (QUERY_STRING) in"
msgstr "CRLF Injection (QUERY_STRING) in"

#: ../attack/crlfattack.py:50 ../attack/crlfattack.py:73
#: ../attack/execattack.py:88 ../attack/execattack.py:97
#: ../attack/execattack.py:131 ../attack/execattack.py:145
#: ../attack/filehandlingattack.py:111 ../attack/filehandlingattack.py:120
#: ../attack/filehandlingattack.py:154 ../attack/filehandlingattack.py:168
#: ../attack/sqlinjectionattack.py:100 ../attack/sqlinjectionattack.py:108
#: ../attack/sqlinjectionattack.py:138 ../attack/sqlinjectionattack.py:152
#: ../attack/sqlinjectionattack.py:225 ../attack/sqlinjectionattack.py:234
#: ../attack/sqlinjectionattack.py:258 ../attack/sqlinjectionattack.py:276
#: ../attack/xssattack.py:276 ../attack/xssattack.py:331
#: ../attack/xssattack.py:386 ../attack/xssattack.py:440
#: ../attack/xssattack.py:497
msgid "Evil url"
msgstr "Evil url"

#: ../attack/crlfattack.py:54 ../attack/filehandlingattack.py:100
#: ../attack/filehandlingattack.py:101
msgid "Timeout (QUERY_STRING) in"
msgstr "Timeout (QUERY_STRING) in"

#: ../attack/crlfattack.py:55 ../attack/crlfattack.py:83
#: ../attack/execattack.py:77 ../attack/execattack.py:119
#: ../attack/filehandlingattack.py:102 ../attack/filehandlingattack.py:145
msgid "caused by"
msgstr "caused by"

#: ../attack/crlfattack.py:72 ../attack/crlfattack.py:82
#: ../attack/execattack.py:118 ../attack/execattack.py:130
#: ../attack/execattack.py:185 ../attack/filehandlingattack.py:144
#: ../attack/filehandlingattack.py:153 ../attack/filehandlingattack.py:208
#: ../attack/sqlinjectionattack.py:137 ../attack/sqlinjectionattack.py:188
#: ../attack/sqlinjectionattack.py:257 ../attack/xssattack.py:275
#: ../attack/xssattack.py:330 ../attack/xssattack.py:385
msgid "in"
msgstr "in"

#: ../attack/crlfattack.py:82 ../attack/execattack.py:118
#: ../attack/filehandlingattack.py:144
msgid "Timeout"
msgstr "Timeout"

#: ../attack/execattack.py:76 ../attack/execattack.py:171
#: ../attack/filehandlingattack.py:198
msgid "Timeout in"
msgstr "Timeout in"

#: ../attack/execattack.py:87 ../attack/filehandlingattack.py:109
#: ../attack/filehandlingattack.py:110 ../attack/sqlinjectionattack.py:99
msgid "(QUERY_STRING) in"
msgstr "(QUERY_STRING) in"

#: ../attack/execattack.py:96 ../attack/execattack.py:144
#: ../attack/filehandlingattack.py:119 ../attack/filehandlingattack.py:167
#: ../attack/sqlinjectionattack.py:107 ../attack/sqlinjectionattack.py:151
#: ../attack/sqlinjectionattack.py:233 ../attack/sqlinjectionattack.py:275
msgid "500 HTTP Error code with"
msgstr "500 HTTP Error code with"

#: ../attack/execattack.py:172 ../attack/execattack.py:186
#: ../attack/execattack.py:197 ../attack/filehandlingattack.py:199
#: ../attack/filehandlingattack.py:209 ../attack/filehandlingattack.py:220
#: ../attack/sqlinjectionattack.py:189 ../attack/sqlinjectionattack.py:199
#: ../attack/sqlinjectionattack.py:304 ../attack/sqlinjectionattack.py:319
#: ../attack/xssattack.py:270 ../attack/xssattack.py:325
#: ../attack/xssattack.py:380 ../attack/xssattack.py:434
#: ../attack/xssattack.py:491
msgid "with params"
msgstr "with params"

#: ../attack/execattack.py:173 ../attack/execattack.py:184
#: ../attack/execattack.py:187 ../attack/execattack.py:198
#: ../attack/filehandlingattack.py:200 ../attack/filehandlingattack.py:207
#: ../attack/filehandlingattack.py:210 ../attack/filehandlingattack.py:221
#: ../attack/sqlinjectionattack.py:187 ../attack/sqlinjectionattack.py:190
#: ../attack/sqlinjectionattack.py:200 ../attack/sqlinjectionattack.py:305
#: ../attack/sqlinjectionattack.py:320 ../attack/xssattack.py:271
#: ../attack/xssattack.py:326 ../attack/xssattack.py:381
#: ../attack/xssattack.py:435 ../attack/xssattack.py:492
msgid "coming from"
msgstr "coming from"

#: ../attack/execattack.py:177 ../attack/filehandlingattack.py:197
msgid "Timeout coming from"
msgstr "Timeout coming from"

#: ../attack/execattack.py:194 ../attack/filehandlingattack.py:217
#: ../attack/sqlinjectionattack.py:196 ../attack/sqlinjectionattack.py:316
msgid "500 HTTP Error code coming from"
msgstr "500 HTTP Error code coming from"

#: ../attack/execattack.py:196 ../attack/filehandlingattack.py:219
#: ../attack/sqlinjectionattack.py:198 ../attack/sqlinjectionattack.py:318
msgid "500 HTTP Error code in"
msgstr "500 HTTP Error code in"

#: ../attack/sqlinjectionattack.py:223
msgid "Blind SQL Injection (QUERY_STRING)"
msgstr "Blind SQL Injection (QUERY_STRING)"

#: ../attack/sqlinjectionattack.py:224
msgid "Blind SQL Injection (QUERY_STRING) in"
msgstr "Blind SQL Injection (QUERY_STRING) in"

#: ../attack/sqlinjectionattack.py:256 ../attack/sqlinjectionattack.py:257
#: ../attack/sqlinjectionattack.py:263 ../attack/sqlinjectionattack.py:264
msgid "Blind SQL Injection"
msgstr "Blind SQL Injection"

#: ../attack/sqlinjectionattack.py:302
msgid "Blind SQL Injection coming from"
msgstr "Blind SQL Injection coming from"

#: ../attack/sqlinjectionattack.py:303
msgid "Blind SQL Injection in"
msgstr "Blind SQL Injection in"

#: ../attack/xssattack.py:132 ../attack/xssattack.py:135
#: ../attack/xssattack.py:155
msgid "Found permanent XSS in"
msgstr "Found permanent XSS in"

#: ../attack/xssattack.py:132 ../attack/xssattack.py:135
msgid "with"
msgstr "with"

#: ../attack/xssattack.py:153
msgid "Found permanent XSS attacked by"
msgstr "Found permanent XSS attacked by"

#: ../attack/xssattack.py:154
msgid "with field"
msgstr "with field"

#: ../attack/xssattack.py:156
msgid "attacked by"
msgstr "attacked by"

#: ../attack/xssattack.py:156
msgid "with fields"
msgstr "with fields"

#: ../attack/xssattack.py:261 ../attack/xssattack.py:266
#: ../attack/xssattack.py:275 ../attack/xssattack.py:278
#: ../attack/xssattack.py:316 ../attack/xssattack.py:321
#: ../attack/xssattack.py:330 ../attack/xssattack.py:333
#: ../attack/xssattack.py:372 ../attack/xssattack.py:377
#: ../attack/xssattack.py:385 ../attack/xssattack.py:388
#: ../attack/xssattack.py:426 ../attack/xssattack.py:431
#: ../attack/xssattack.py:439 ../attack/xssattack.py:442
#: ../attack/xssattack.py:482 ../attack/xssattack.py:487
#: ../attack/xssattack.py:496 ../attack/xssattack.py:499
msgid "XSS"
msgstr "XSS"

#: ../attack/xssattack.py:269 ../attack/xssattack.py:324
#: ../attack/xssattack.py:379 ../attack/xssattack.py:433
#: ../attack/xssattack.py:490
msgid "Found XSS in"
msgstr "Found XSS in"

#: ../attack/vulnerabilitiesdescriptions.py:2
msgid "500 HTTP Error code"
msgstr "500 HTTP Error code"

#: ../attack/vulnerabilitiesdescriptions.py:3
msgid "500 Error description"
msgstr "Internal Server Error. The server encountered an unexpected condition which "
"prevented it from fulfilling the request."
"<ul>"
"  <li><a href='http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5'>"
"      World Wide Web Consortium: HTTP/1.1 Status Code Definitions"
"      </a></li>"
"  <li><a href='http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error'>"
"      Wikipedia: List of HTTP status codes"
"      </a></li>"
"</ul>"
