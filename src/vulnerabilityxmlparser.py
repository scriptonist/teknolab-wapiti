from xml.parsers import expat
from vulnerability import Vulnerability

class VulnerabilityXMLParser:
  
  VULNERABILITY = "vulnerability"
  VULNERABITITY_NAME = "name"
  VULNERABILITY_DESCRIPTION = "description"
  VULNERABILITY_SOLUTION    = "solution"
  VULNERABILITY_REFERENCES  = "references"
  
  vulnerabilities = []
  tag = ""
  
  def __init__(self):
    self._parser = expat.ParserCreate()
    self._parser.StartElementHandler  = self.start_element
    self._parser.EndElementHandler    = self.end_element
    self._parser.CharacterDataHandler = self.char_data
  
  def parse(self,fileName):
    f = None 
    try:
      f = open(fileName)
      content = f.read()
      self.feed(content)
    finally:
      if f!=None:
        f.close()
  
  def feed(self, data):
    self._parser.Parse(data, 0)

  def close(self):
    self._parser.Parse("", 1)
    del self._parser
  
  def start_element(self, name, attrs):
    if name==self.VULNERABILITY:
      self.vul = Vulnerability()
      self.vul.setName(attrs[self.VULNERABITITY_NAME])
    elif name==self.VULNERABILITY_DESCRIPTION:
      self.tag = self.VULNERABILITY_DESCRIPTION
    elif name==self.VULNERABILITY_SOLUTION:
      self.tag = self.VULNERABILITY_SOLUTION
    elif name==self.VULNERABILITY_REFERENCES:
      self.tag = self.VULNERABILITY_REFERENCES
   
  def end_element(self, name):
    if name==self.VULNERABILITY:
      self.vulnerabilities.append(self.vul)

  def char_data(self, data):
    if self.tag==self.VULNERABILITY_DESCRIPTION:
      self.vul.setDescription(data)
    elif self.tag==self.VULNERABILITY_SOLUTION:
      self.vul.setSolution(data)
    elif self.tag==self.VULNERABILITY_REFERENCES:
      self.vul.setReferences(data)
    self.tag = ""

  def getVulnerabilities(self):
    return self.vulnerabilities


if __name__ == "__main__":
  xmlParser = VulnerabilityXMLParser()
  xmlParser.parse("config/vulnerabilities/vulnerabilities.xml")
  print xmlParser.getVulnerabilities()
  print xmlParser.getVulnerabilities()['SQL injection']
  for a in xmlParser.getVulnerabilities():
    print xmlParser.getVulnerabilities()[a].getName()
    print xmlParser.getVulnerabilities()[a].getDescription()
    print xmlParser.getVulnerabilities()[a].getSolution()
    print xmlParser.getVulnerabilities()[a].getReferences()
    print "--------------------"
  
  
